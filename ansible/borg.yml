---
- name: Retrieve borg stats
  hosts: backup
  become: true
  vars:
    borg_stats: {}
  tasks:
    - name: Retrieve info on repo
      ansible.builtin.command: "borg list --short {{ borg_pool_path }}/{{ client }}/main"
      environment:
        BORG_PASSPHRASE: "{{ borg_passphrase }}"
      register: borg_list_output
      changed_when: false
      loop: "{{ backup_clients }}"
      loop_control:
        loop_var: client

    - name: Print borg list
      debug:
        var: borg_list_output

    - name: Append data to dictionary
      ansible.builtin.set_fact:
        borg_stats: "{{ borg_stats | combine(new_item, recursive=true) }}"
      vars:
        new_item: "{ '{{ client['client'] }}': { 'last_archive': '{{ client.stdout_lines[-1] }}', 'num_archives': '{{ client.stdout_lines | length }}' } }"
      loop: "{{ borg_list_output.results }}"
      loop_control:
        loop_var: client

    - name: Print borg stats
      debug:
        var: borg_stats

    - name: Retrieve info on last borg archive
      ansible.builtin.command: "borg info --json {{ borg_pool_path }}/{{ client }}/main::{{ borg_stats[client]['last_archive'] }}"
      environment:
        BORG_PASSPHRASE: "{{ borg_passphrase }}"
      register: borg_info_output
      changed_when: false
      loop: "{{ backup_clients }}"
      loop_control:
        loop_var: client

    - name: Append borg info data to dictionary
      ansible.builtin.set_fact:
        borg_stats: "{{ borg_stats | combine(new_item, recursive=true) }}"
      vars:
        client_name: "{{ client['client'] }}"
        info_json: "{{ client['stdout'] | from_json }}"
        new_archive: "{{ info_json.archives[0] }}"
        backup_duration: "{{ new_archive['duration'] | round(2) }} s"
        backup_size_raw: "{{ new_archive.stats.deduplicated_size }}"
        backup_total_size_raw: "{{ info_json.cache.stats.unique_csize }}"
        backup_num_files: "{{ new_archive.stats.nfiles }}"
        backup_size: "{{ backup_size_raw | int | human_readable }}"
        backup_total_size: "{{ backup_total_size_raw | int | human_readable }}"
        new_item: >-
          {{
          {
            client_name: borg_stats[client_name] | combine(
              {
                'backup_duration': backup_duration,
                'backup_size_raw': backup_size_raw,
                'backup_total_size_raw': backup_total_size_raw,
                'backup_num_files': backup_num_files,
                'backup_size': backup_size,
                'backup_total_size': backup_total_size
              }, recursive=true)
          }
          }}
      loop: "{{ borg_info_output.results }}"
      loop_control:
        loop_var: client

    - name: Print borg stats
      debug:
        var: borg_stats
